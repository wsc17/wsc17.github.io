<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Wushuchao | Blog</title>
    <link>https://wsc17.github.io/tags/hugo/</link>
    <description>Recent content in hugo on Wushuchao | Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Nov 2023 22:21:51 +0800</lastBuildDate>
    <atom:link href="https://wsc17.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo 文章中的配置</title>
      <link>https://wsc17.github.io/posts/hugo/hugo-posts-config/</link>
      <pubDate>Sat, 11 Nov 2023 22:21:51 +0800</pubDate>
      <guid>https://wsc17.github.io/posts/hugo/hugo-posts-config/</guid>
      <description>Hugo 文章中的配置 当使用hugo命令hugo new posts/xxx.md创建一篇博客时，在博客最顶部生成了一些配置项，本文简单介绍其作用。
注，在使用配置项时，全小写字母即可。
title title定义了文章的标题，它会显示在博客列表页中。
slug 如果使用了slug，那么浏览器中博客的地址（默认是posts中markdown文件的名称），也将会使用slug配置值。
date 配置博客的日期，（国内）默认格式示例：2023-11-11T21:26:30+08:00，其中【+08:00】表示这是一个北京时间。
注：当这个时间是一个未来的日期时，博客有可能不会在页面上显示出来。
draft 是否草稿。未进行其它配置的情况下，draft为true时，此博客不会在页面显示出来。
description 博客描述。
tags 博客标签。一篇博客可设置多个标签，列：
tags: - blog - Hugo showlastmod 是否显示最新一次修改时间，为true时，必须配置lastMod配置项。
lastmod 最新一次修改时间。注，这个配置与date配置不能完全相同。
配置项toc 是否显示目录。注：需要hugo主题支持目录功能。
scrolltotop 是否显示【回到顶部】按钮。</description>
    </item>
    <item>
      <title>Hugo 主题Hermit-v2</title>
      <link>https://wsc17.github.io/posts/hugo/hugo-theme-hermit-v2/</link>
      <pubDate>Sat, 11 Nov 2023 21:50:30 +0800</pubDate>
      <guid>https://wsc17.github.io/posts/hugo/hugo-theme-hermit-v2/</guid>
      <description>HUGO主题Hermit-V2 本文介绍hugo所提供的主题：hermit-v2的简单使用。
下载主题 可使用常见的2种方式下载主题：
在cmd小黑框或者PowerShell中，使用cd命令进入站点根目录，执行命令：
git submodule add https://github.com/1bl4z3r/hermit-V2 themes/hermit-v2 访问https://github.com/1bl4z3r/hermit-V2下载ZIP压缩包，解压后放到站点的themes文件夹下：
// windows下，cmd小黑框中使用tree命令，可以显示文件夹结构 // windows下，cmd小黑框中使用tree &amp;gt; xxx.txt命令，保存文件夹结构 // themes文件夹目录结构（注意文件夹命名：hermit-v2，后续会用到） themes └─hermit-v2 ├─archetypes ├─assets │ ├─js │ │ └─mathjax │ └─scss ├─i18n ├─images └─layouts ├─partials ├─posts ├─shortcodes └─_default 使用主题 在hugo站点根目录下，编辑hugo.toml文件，添加配置即可：
// 配置项的值，与站点theme文件夹下，主题的文件夹名称保持一致 theme = &amp;#39;hermit-v2&amp;#39; 简单修改配置 在hugo站点根目录下，编辑hugo.toml文件，可覆盖hermit-v2主题的配置项。
站点图标 准备一个图标文件，例，https://www.iconfont.cn下载一个png图标，重命名为favicon.ico（包括文件后缀）。
将图标文件放到站点static文件夹下即可：
D:\noteTool\NoteWorkspace\blog\wuzuchaoblog\static\favicon.ico 主页菜单 示例：
# 主页菜单 [menu] [[menu.main]] name = &amp;#34;文章&amp;#34; url = &amp;#34;posts/&amp;#34; weight = 10 [[menu.main]] name = &amp;#34;About&amp;#34; url = &amp;#34;about-hugo/&amp;#34; weight = 20 作者信息 示例：</description>
    </item>
    <item>
      <title>Hugo 部署到Gitee</title>
      <link>https://wsc17.github.io/posts/hugo/hugo-deploy-gitee/</link>
      <pubDate>Fri, 10 Nov 2023 20:06:06 +0800</pubDate>
      <guid>https://wsc17.github.io/posts/hugo/hugo-deploy-gitee/</guid>
      <description>HUGO 部署到Gitee hugo官网：https://gohugo.io/。
gitee官网：https://gitee.com/。
创建Gitee仓库 在gitee登录，创建一个仓库，在此不再赘述。
编译站点 在站点目录下，使用cmd小黑框或者PwoerShell，输入命令，将会生成public文件夹：
hugo 推送本地HUGO站点到Gitee 这步涉及git使用，内容较为繁杂，这里仅介绍使用SourceTree工具的方式。
SourceTree管理本地仓库 打开sourcetree，点击左上方加号打开一个新的tab面板。
点击Add，选择hugo站点根目录，例：D:\blog\workspace\wushuchaoblog，点击添加。
关联Gitee仓库 sourcetree右上方点击“远端”，弹窗中点击设置。
在“远程仓库”下，点击添加：远端名称，勾选默认名称；输入gitee仓库URL，确定即可（首次操作时，需要输入gitee的账号和密码）。
推送到Gitee仓库 首先拉取gitee仓库数据到本地：sourcetree点击拉取，选择要拉取的远端分支（如果没有点一下刷新）。
提交本地文件：sourcetree左侧点击文件状态，未暂存模块点击暂存所有，然后点击提交。
推送：sourcetree点击推送，勾选要推送的分支，点击推送。
Gitee Pages服务 部署 使用Gitee Pages服务，部署站点到公网（首次使用需实名认证）。
在Gitee仓库下，点击服务，选择Gitee Page服务。
部署分支选择master即可。
部署目录：如果将站点所有文件都推送到了Gitee，则输入public；否则视情况而定。
可勾选强制使用https。
点击启动，成功后点击页面提示的链接即可访问站点。
更新 更新了博客文章时，需要在本地使用hugo命令重新编译，然后将变更提交到Gitee，然后在Gitee Pages服务中重新部署。</description>
    </item>
    <item>
      <title>Hugo 入门</title>
      <link>https://wsc17.github.io/posts/hugo/hugo-quickstart/</link>
      <pubDate>Fri, 10 Nov 2023 14:26:30 +0800</pubDate>
      <guid>https://wsc17.github.io/posts/hugo/hugo-quickstart/</guid>
      <description>HUGO QuickStart hugo官网：https://gohugo.io/。
Windows 11安装HUGO 官方安装指导：https://gohugo.io/installation/windows/#package-managers。
安装hugo可使用三种方式，这里使用Winget的方式。
安装Winget 访问 https://learn.microsoft.com/en-us/windows/package-manager/winget/#install-winget。
点击get App Installer from the Microsoft Store，在跳转后的页面点击安装，在Microsoft Store中点击获取。
查看是否安装成功：使用快捷键win + r，输入cmd打开小黑框，查看版本号：
winget --verison 安装HUGO 安装winget后，在cmd小黑框中输入命令安装hugo扩展版：
// 安装路径自行修改 winget install --location D:\blog\hugo\hugo_install Hugo.Hugo.Extended 未设置环境变量时，在小黑框使用cd命令进入hugo安装目录，输入命令查看版本号：
.\hugo version 设置环境变量：将hugo安装目录添加到path。完成后，后续可在cmd小黑框中使用hugo命令（无需cd到hugo安装目录）：
hugo version 安装PowerShell 简述 官方指导，windows下，使用PowerShell来操作hugo（非必须，cmd小黑框亦可）。
注，此PowerShell，非彼PowerShell。
参见：https://gohugo.io/getting-started/quick-start/#commands。
可以通过Winget，或者迅雷下载来安装。
使用Winget安装PowerShell 在cmd小黑框中，输入命令，获取PowerShell版本：
winget search Microsoft.PowerShell // 输入 Y 同意条款后，输出结果 Name Id Version Source ----------------------------------------------------------------- PowerShell Microsoft.PowerShell 7.3.9.0 winget PowerShell Preview Microsoft.PowerShell.Preview 7.4.0.101 winget 输入命令安装：
winget install --id Microsoft.</description>
    </item>
  </channel>
</rss>
